name: Infra Construction And App Deploy

on:
  workflow_dispatch:

jobs:
  DeployInfraAndBuild:
    name: Deploy Infra and Build
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Cache Terraform binary
        uses: actions/cache@v3
        with:
          path: /usr/bin/terraform
          key: terraform-cache-${{ runner.os }}-${{ hashFiles('**/terraform') }}
          restore-keys: |
            terraform-cache-${{ runner.os }}-

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
     
      - name: Update Terraform Setup
        working-directory: Terraform 
        run: |
           sed -i "s|{tmp_subscription_id}|${{ secrets.SUBSCRIPTION_ID }}|g" variables.tfvars
           sed -i "s|{tmp_tenant_id}|${{ secrets.TENANT_ID }}|g" variables.tfvars
           sed -i "s|{tmp_sp_client_id}|${{ secrets.SP_CLIENT_ID }}|g" variables.tfvars
           sed -i "s|{tmp_sp_client_secret}|${{ secrets.SP_CLIENT_SECRET }}|g" variables.tfvars

           sed -i "s|{tmp_resource_group_name}|${{ secrets.RESOURCE_GROUP_NAME }}|g" variables.tfvars
           sed -i "s|{tmp_resource_group_location}|${{ secrets.RESOURCE_GROUP_LOCATION }}|g" variables.tfvars

           sed -i "s|{tmp_db_server_name}|${{ secrets.DB_SERVER_NAME }}|g" variables.tfvars
           sed -i "s|{tmp_db_server_user}|${{ secrets.DB_SERVER_USER }}|g" variables.tfvars
           sed -i "s|{tmp_db_server_password}|${{ secrets.DB_SERVER_PASSWORD }}|g" variables.tfvars

           sed -i "s|{tmp_db_name}|${{ secrets.DB_NAME }}|g" variables.tfvars

           sed -i "s|{tmp_storage_account_name}|${{ secrets.STORAGE_ACCOUNT }}|g" variables.tfvars
           sed -i "s|{tmp_storage_container_name}|${{ secrets.STORAGE_CONTAINER }}|g" variables.tfvars

           sed -i "s|{tmp_app_config_name}|${{ secrets.APP_NAME }}|g" variables.tfvars

      - name: Start Terraform Deploy
        working-directory: Terraform
        run: |
          terraform init
          terraform plan -var-file=variables.tfvars
          terraform apply -auto-approve -var-file=variables.tfvars

  InitDatabase:
    name: Create Table and Add Data to Database
    needs: DeployInfraAndBuild
    runs-on: ubuntu-latest                     
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Set up ODBC Driver 18 for SQL Server
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18
          sudo apt-get install -y unixodbc-dev

      - name: Create Table In Sql Server
        working-directory: database
        run: |
          pip install pyodbc
          sed -i "s|{tmp_db_server_name}|${{ secrets.DB_SERVER_NAME }}|g" createTable.py
          sed -i "s|{tmp_db_server_user}|${{ secrets.DB_SERVER_USER }}|g" createTable.py
          sed -i "s|{tmp_db_server_password}|${{ secrets.DB_SERVER_PASSWORD }}|g" createTable.py
          sed -i "s|{tmp_db_name}|${{ secrets.DB_NAME }}|g" createTable.py
          python createTable.py

      - name: Check Table In Sql Server
        working-directory: database
        run: |
          pip install pyodbc
          sed -i "s|{tmp_db_server_name}|${{ secrets.DB_SERVER_NAME }}|g" checkTabelCreation.py
          sed -i "s|{tmp_db_server_user}|${{ secrets.DB_SERVER_USER }}|g" checkTabelCreation.py
          sed -i "s|{tmp_db_server_password}|${{ secrets.DB_SERVER_PASSWORD }}|g" checkTabelCreation.py
          sed -i "s|{tmp_db_name}|${{ secrets.DB_NAME }}|g" checkTabelCreation.py
          python checkTabelCreation.py
