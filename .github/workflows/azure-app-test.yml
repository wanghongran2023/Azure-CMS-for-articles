name: Python Application Workflow

on:
  workflow_dispatch:  # This allows the workflow to be triggered manually

jobs:
  build:
    runs-on: ubuntu-latest  # Runs on the latest Ubuntu environment

    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python 3.9 environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Start the Python application (running the web server)
      - name: Run application and capture logs
        run: |
          # Run the server in the background and capture logs
          nohup python application.py > server_output.log 2>&1 &
          sleep 10  # Wait a few seconds for the server to start

          # Check if there are any errors in the log
          tail -n 10 server_output.log  # Show the last 10 lines of the log for review

          # Optionally, you can run a curl or wget command to check if the server is responding
          curl -f http://localhost:5000 || echo "Server failed to respond"
          
          # Optionally stop the server after the check
          pkill -f "python application.py"

